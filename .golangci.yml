# More info on config here: https://golangci-lint.run/usage/configuration/#config-file
run:
  timeout: 10m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - bin
    - vendor
    - var
    - tmp
  skip-files:
    - \.pb\.go$
    - \.pb\.gw\.go$
    - \.pb\.scratch\.go$
    - \.pb\.goclay\.go$

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  # sorts results by: filepath, line and column
  sort-results: true

linters-settings:
  depguard:
    list-type: blacklist
    packages:
      - github.com/pkg/errors
      - gitlab.ozon.ru/platform/errors
      - github.com/magiconair/properties/assert
    packages-with-error-message:
      - github.com/pkg/errors: 'use std errors instead'
      - gitlab.ozon.ru/platform/errors: 'use std errors instead'
      - github.com/magiconair/properties/assert: 'use "github.com/stretchr/testify/assert" instead'
  dupl:
    threshold: 155
  errcheck:
    # report about not checking of errors in type assertions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: true
  exhaustive:
    # check switch statements in generated files also
    check-generated: false
    # indicates that switch statements are to be considered exhaustive if a
    # 'default' case is present, even if all enum members aren't listed in the
    # switch
    default-signifies-exhaustive: false
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    # Which checks should be disabled; can't be combined with 'enabled-checks'; default is empty
    disabled-checks:
      - commentFormatting
  gosec:
    # To specify a set of rules to explicitly exclude.
    # Available rules: https://github.com/securego/gosec#available-rules
    excludes:
      - G404 #Use of weak random number generator (math/rand instead of crypto/rand)
      - G505 #Blocklisted import crypto/sha1: weak cryptographic primitive
      - G401 #Use of weak cryptographic primitive
  gosimple:
    # Select the Go version to target. The default is '1.13'.
    go: "1.17"
    # https://staticcheck.io/docs/options#checks
    checks: [ "all" ]
  govet:
    # report about shadowed variables
    check-shadowing: true
    enable-all: true
    disable:
      - fieldalignment # until it receives option to suggest fix use maligned
  maligned:
    # print struct with more effective memory layout or not, false by default
    suggest-new: true
  nolintlint:
    # Enable to require nolint directives to mention the specific linter being suppressed. Default is false.
    require-specific: true
  staticcheck:
    # Select the Go version to target. The default is '1.13'.
    go: "1.17"
    # https://staticcheck.io/docs/options#checks
    checks: [ "all" ]
  unused:
    # Select the Go version to target. The default is '1.13'.
    go: "1.17"

linters:
  disable-all: true
  enable:
    - depguard
    - dupl
    - durationcheck
    - errcheck
    - errorlint
    - exhaustive
    - exportloopref
    - gocognit
    - goconst
    - gocritic
    - goimports
    - gosec
    - govet
    - ineffassign
    - maligned # don't replace until govet/fieldalignment receives option to suggest fix
    - megacheck # (gosimple + staticcheck + unused)
    - nolintlint
    #- prealloc
    - promlinter
    - revive
    - typecheck
    - unconvert
    - wastedassign

issues:
  # List of regexps of issue texts to exclude, empty list by default.
  # But independently of this option we use default exclude patterns,
  # it can be disabled by `exclude-use-default: false`. To list all
  # excluded by default patterns execute `golangci-lint run --help`
  exclude:
    # disabled here as you cannot disable single revive rule in golang-ci (yet)
    - don't use an underscore in package name
    # EXC0001 errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
  exclude-rules:
    # Ignore pointer bytes in struct alignment tests (this is a very
    # minor optimisation)
    - linters:
        - govet
      text: "pointer bytes could be" # does nothing now, here for future use
  # Independently of option `exclude` we use default exclude patterns,
  # it can be disabled by this option. To list all
  # excluded by default patterns execute `golangci-lint run --help`.
  # Default value for this option is true.
  exclude-use-default: false
  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0
  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0
  # Fix found issues (if it's supported by the linter)
  fix: false
